{"version":3,"file":"static/js/600.a28c5f60.chunk.js","mappings":"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","sources":["components/shared-components/Flex/index.js","views/app-views/main/customers/EditCustomer.js"],"sourcesContent":["import styled from '@emotion/styled';\r\n\r\nconst Flex = styled.div(({justifyContent, alignItems, flexDirection, gap, padding, margin}) => {\r\n\r\n\tconst baseStyle = {\r\n\t\tdisplay: 'flex',\r\n\t\tjustifyContent: justifyContent,\r\n\t\talignItems: alignItems,\r\n\t\tgap: typeof gap === 'number' ? `${gap}px` : gap,\r\n\t}\r\n\r\n\tif (flexDirection) {\r\n\t\tbaseStyle.flexDirection = flexDirection\r\n\t}\r\n\r\n\tif (padding) {\r\n\t\tbaseStyle.padding = padding\r\n\t}\r\n\r\n\tif (margin) {\r\n\t\tbaseStyle.margin = margin\r\n\t}\r\n\r\n\treturn {...baseStyle}\r\n})\r\n\r\nexport default Flex\r\n","import React, { Component } from 'react';\r\nimport { Form, Avatar, Button, Input, Row, Col, message, Upload } from 'antd';\r\nimport { UserOutlined } from '@ant-design/icons';\r\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport {redirect, useLocation, useNavigate} from \"react-router-dom\";\r\nimport {useSelector} from \"react-redux\";\r\nimport Loading from \"../../../../components/shared-components/Loading\";\r\nimport {APP_PREFIX_PATH} from \"../../../../configs/AppConfig\";\r\n\r\nexport const EditProfileFetch = () => {\r\n    const { data } = useSelector((state) => state.customers);\r\n    const location = useLocation()\r\n    const navigate = useNavigate()\r\n    const id = location.pathname.split('/').at(-1)\r\n    const newData = data.filter(el => String(el.id) === id)\r\n    return <EditProfile navigate={navigate} newData={newData} />\r\n}\r\n\r\nexport class EditProfile extends Component {\r\n\r\n    avatarEndpoint = 'https://www.mocky.io/v2/5cc8019d300000980a055e76'\r\n\r\n    state= {\r\n        avatarUrl: '/img/avatars/thumb-6.jpg',\r\n        name: this.props.newData[0].name,\r\n        email: this.props.newData[0].email,\r\n        userName: this.props.newData[0].username,\r\n        phoneNumber: this.props.newData[0].phone,\r\n        website: this.props.newData[0].website,\r\n        status: false\r\n    }\r\n\r\n    getBase64(img, callback) {\r\n        const reader = new FileReader();\r\n        reader.addEventListener('load', () => callback(reader.result));\r\n        reader.readAsDataURL(img);\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.state.status === true) {\r\n            this.props.navigate(`${APP_PREFIX_PATH}/customers/list`)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const onFinish = values => {\r\n            const key = 'updatable';\r\n            message.loading({ content: 'Updating...', key });\r\n            setTimeout(() => {\r\n                this.setState({\r\n                    name: values.name,\r\n                    email: values.email,\r\n                    userName: values.userName,\r\n                    phoneNumber: values.phoneNumber,\r\n                    website: values.website,\r\n                    status: true\r\n                })\r\n                message.success({ content: 'Done!', key, duration: 2 });\r\n            }, 1500);\r\n        };\r\n\r\n        const onFinishFailed = errorInfo => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n\r\n        const onUploadAavater = info => {\r\n            const key = 'updatable';\r\n            if (info.file.status === 'uploading') {\r\n                message.loading({ content: 'Uploading...', key, duration: 1000 });\r\n                return;\r\n            }\r\n            if (info.file.status === 'done') {\r\n                this.getBase64(info.file.originFileObj, imageUrl =>\r\n                    this.setState({\r\n                        avatarUrl: imageUrl,\r\n                    }),\r\n                );\r\n                message.success({ content: 'Uploaded!', key,  duration: 1.5 });\r\n            }\r\n        };\r\n\r\n        const onRemoveAvater = () => {\r\n            this.setState({\r\n                avatarUrl: ''\r\n            })\r\n        }\r\n\r\n        const { name, email, userName, phoneNumber, website, avatarUrl } = this.state;\r\n\r\n        return (\r\n            <>\r\n                <Flex alignItems=\"center\" mobileFlex={false} className=\"text-center text-md-left\">\r\n                    <Avatar size={90} src={avatarUrl} icon={<UserOutlined />}/>\r\n                    <div className=\"ml-3 mt-md-0 mt-3\">\r\n                        <Upload onChange={onUploadAavater} showUploadList={false} action={this.avatarEndpoint}>\r\n                            <Button type=\"primary\">Change Avatar</Button>\r\n                        </Upload>\r\n                        <Button className=\"ml-2\" onClick={onRemoveAvater}>Remove</Button>\r\n                    </div>\r\n                </Flex>\r\n                <div className=\"mt-4\">\r\n                    <Form\r\n                        name=\"basicInformation\"\r\n                        layout=\"vertical\"\r\n                        initialValues={\r\n                            {\r\n                                'name': name,\r\n                                'email': email,\r\n                                'username': userName,\r\n                                'phoneNumber': phoneNumber,\r\n                                'website': website,\r\n                            }\r\n                        }\r\n                        onFinish={onFinish}\r\n                        onFinishFailed={onFinishFailed}\r\n                    >\r\n                        <Row>\r\n                            <Col xs={24} sm={24} md={24} lg={16}>\r\n                                <Row gutter={ROW_GUTTER}>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Name\"\r\n                                            name=\"name\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Please input your name!',\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Username\"\r\n                                            name=\"username\"\r\n                                            rules={[\r\n                                                {\r\n                                                    required: true,\r\n                                                    message: 'Please input your username!'\r\n                                                },\r\n                                            ]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Email\"\r\n                                            name=\"email\"\r\n                                            rules={[{\r\n                                                required: true,\r\n                                                type: 'email',\r\n                                                message: 'Please enter a valid email!'\r\n                                            }]}\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Phone Number\"\r\n                                            name=\"phoneNumber\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                    <Col xs={24} sm={24} md={12}>\r\n                                        <Form.Item\r\n                                            label=\"Website\"\r\n                                            name=\"website\"\r\n                                        >\r\n                                            <Input />\r\n                                        </Form.Item>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Save Change\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default EditProfileFetch\r\n"],"names":["Flex","styled","justifyContent","alignItems","flexDirection","gap","padding","margin","baseStyle","display","EditProfileFetch","data","useSelector","state","customers","location","useLocation","navigate","useNavigate","id","pathname","split","at","newData","filter","el","String","EditProfile","avatarEndpoint","avatarUrl","name","props","email","userName","username","phoneNumber","phone","website","status","img","callback","reader","FileReader","addEventListener","result","readAsDataURL","prevProps","prevState","snapshot","this","APP_PREFIX_PATH","mobileFlex","className","size","src","icon","onChange","info","key","file","getBase64","originFileObj","imageUrl","setState","message","content","duration","showUploadList","action","type","onClick","layout","initialValues","onFinish","values","setTimeout","onFinishFailed","errorInfo","console","log","xs","sm","md","lg","gutter","ROW_GUTTER","label","rules","required","htmlType","Component"],"sourceRoot":""}