{"version":3,"file":"static/js/460.98c2e84d.chunk.js","mappings":"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","sources":["components/shared-components/AvatarStatus/index.js","views/app-views/main/customers/CustomerList.js","views/app-views/main/customers/CustomersFetch.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React, {Component} from 'react'\r\nimport {Card, Table, Tag, Tooltip, message, Button} from 'antd';\r\nimport {EyeOutlined, DeleteOutlined} from '@ant-design/icons';\r\nimport dayjs from 'dayjs';\r\nimport UserView from './UserView';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport {Link, NavLink} from \"react-router-dom\";\r\n\r\n// import userData from \"assets/data/user-list.data.json\";\r\n\r\nexport class CustomersList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    state = {\r\n        users: this.props.data,\r\n        userProfileVisible: false,\r\n        selectedUser: null,\r\n        isCustomersLoading: this.props.isCustomersLoading\r\n    }\r\n\r\n    deleteUser = userId => {\r\n        this.setState({\r\n            users: this.state.users.filter(item => item.id !== userId),\r\n        })\r\n        message.success({content: `Deleted user ${userId}`, duration: 2});\r\n    }\r\n\r\n    showUserProfile = userInfo => {\r\n        this.setState({\r\n            userProfileVisible: true,\r\n            selectedUser: userInfo\r\n        });\r\n    };\r\n\r\n    closeUserProfile = () => {\r\n        this.setState({\r\n            userProfileVisible: false,\r\n            selectedUser: null\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const {users, isCustomersLoading} = this.state;\r\n\r\n        const tableColumns = [\r\n            {\r\n                title: 'User',\r\n                dataIndex: 'name',\r\n                render: (_, users) => (\r\n                    <div className=\"d-flex\">\r\n                        <Link to={'' + users.id}>\r\n                            <AvatarStatus src={users.img} name={users.name} subTitle={users.email}/>\r\n                        </Link>\r\n                    </div>\r\n                ),\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.name.toLowerCase();\r\n                        b = b.name.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: 'Username',\r\n                dataIndex: 'Username',\r\n                render: (_, users) => (\r\n                    <div className=\"d-flex\">\r\n                        <p>{users.username}</p>\r\n                    </div>\r\n                ),\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.username.toLowerCase();\r\n                        b = b.username.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: 'Phone',\r\n                dataIndex: 'phone',\r\n                render: (_, users) => (\r\n                    <div className=\"d-flex\">\r\n                        <p>{users.phone}</p>\r\n                    </div>\r\n                ),\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.phone.toLowerCase();\r\n                        b = b.phone.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: 'WebSite',\r\n                dataIndex: 'website',\r\n                render: (_, users) => (\r\n                    <div className=\"d-flex\">\r\n                        <p>{users.website}</p>\r\n                    </div>\r\n                ),\r\n                sorter: {\r\n                    compare: (a, b) => {\r\n                        a = a.website.toLowerCase();\r\n                        b = b.website.toLowerCase();\r\n                        return a > b ? -1 : b > a ? 1 : 0;\r\n                    },\r\n                },\r\n            },\r\n            {\r\n                title: '',\r\n                dataIndex: 'actions',\r\n                render: (_, elm) => (\r\n                    <div className=\"text-right d-flex justify-content-end\">\r\n                        <Tooltip title=\"View\">\r\n                            <Button type=\"primary\" className=\"mr-2\" icon={<EyeOutlined/>} onClick={() => {\r\n                                this.showUserProfile(elm)\r\n                            }} size=\"small\"/>\r\n                        </Tooltip>\r\n                        <Tooltip title=\"Delete\">\r\n                            <Button danger icon={<DeleteOutlined/>} onClick={() => {\r\n                                this.deleteUser(elm.id)\r\n                            }} size=\"small\"/>\r\n                        </Tooltip>\r\n                    </div>\r\n                )\r\n            }\r\n        ];\r\n        return (\r\n            <Card bodyStyle={{'padding': '0px'}}>\r\n                <div className=\"table-responsive\">\r\n                    {<Table columns={tableColumns} dataSource={users} rowKey='id'/>}\r\n                </div>\r\n                {/*<UserView data={selectedUser} visible={userProfileVisible} close={()=> {this.closeUserProfile()}}/>*/}\r\n            </Card>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CustomersList\r\n\r\n","import CustomerList from \"./CustomerList\";\r\nimport {useEffect} from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { fetchCustomers } from \"../../../../store/slices/customersSlice\";\r\nimport Loading from \"../../../../components/shared-components/Loading\";\r\nexport const CustomersFetch = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { data, status } = useSelector((state) => state.customers);\r\n\r\n    const isCustomersLoading = status === \"loading\";\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchCustomers())\r\n    }, [])\r\n\r\n    return <>\r\n        {isCustomersLoading ? <Loading /> :<CustomerList data={data} isCustomersLoading={isCustomersLoading} /> }\r\n    </>\r\n\r\n}\r\n\r\nexport default CustomersFetch"],"names":["renderAvatar","props","className","type","text","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","state","users","data","userProfileVisible","selectedUser","isCustomersLoading","deleteUser","userId","setState","filter","item","message","content","duration","showUserProfile","userInfo","closeUserProfile","this","tableColumns","title","dataIndex","render","_","to","img","email","sorter","compare","a","b","toLowerCase","username","phone","website","elm","EyeOutlined","danger","DeleteOutlined","bodyStyle","columns","dataSource","rowKey","Component","CustomersFetch","dispatch","useDispatch","useSelector","customers","status","useEffect","fetchCustomers","Loading","CustomerList"],"sourceRoot":""}